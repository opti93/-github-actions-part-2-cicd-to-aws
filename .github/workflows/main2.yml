# This is a basic workflow to help you get started with Actions

name: ci-cd
env:
  EB_PACKAGE_S3_BUCKET_NAME : "elb.bucket.opti"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-central-1"
  EB_APPLICATION_NAME       : "Myflask"
  EB_ENVIRONMENT_NAME       : "Myflask-env"
  

on:

  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci-part:
    runs-on: ubuntu-latest
    
    steps:
      - name: Coping repo
        uses: actions/checkout@v3

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region           :  ${{ env.AWS_REGION_NAME }}
        
      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      
  cd-part:
    runs-on: ubuntu-latest
    needs: [ci-part]
    
    steps:
     - name: Configure my AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
        
        
     - name: Create new ElasticBeanstalk Application Version
       run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-${{ github.sha }}"
       
     - name: Deploy new ElasticBeanstalk Application Version
       run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
        
        
        
      


